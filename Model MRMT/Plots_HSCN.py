""" Plots_case

Plots op solutions over time with and without start solution

Thesis OR&QL - EUR 2022
@author: Erik van der Heide

"""

import numpy as np
from matplotlib import pyplot as plt

# Without starting solution
time_without = [0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	2,	5,	10,	15,	20,	25,	31,	35,	40,	45,	50,	67,	60,	66,	71,	76,	80,	91,	91,	92,	94,	95,	97,	97,	99,	101,	102,	105,	110,	115,	120,	125,	131,	135,	140,	147,	151,	156,	161,	166,	171,	177,	180,	186,	191,	197,	200,	203,	206,	212,	215,	221,	226,	232,	234,	237,	240,	242,	245,	252,	257,	261,	266,	271,	276,	276,	280,	287,	291,	295,	298,	300,	306,	306,	310,	315,	321,	326,	330,	337,	341,	345,	350,	356,	361,	365,	371,	371,	376,	380,	385,	391,	394,	396,	400,	405,	411,	415,	421,	425,	427,	431,	435,	442,	446,	451,	451,	452,	455,	462,	466,	471,	475,	480,	486,	486,	488,	490,	497,	497,	501,	506,	510,	516,	520,	525,	527,	532,	536,	541,	541,	546,	551,	556,	561,	567,	572,	575,	580,	585,	591,	596,	600]
UB_without = [np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	np.nan,	6817819.5714,	6851643.5543,	6426327.2497,	6426327.25,	5969751.848,	4908498.541,	4559934.3336,	4181777.6859,	4168780.4955,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4168780.5,	4166614.2876,	4166614.29,	4166614.29,	4166614.29,	4166614.29,	4166614.29,	4166614.29,	4166569.6054,	4166569.61,	4166569.61,	4124321.9018,	4124321.9018,	4124321.9018,	4124321.9018,	4124321.9018,	4124321.9018,	4124321.9018,	4124321.9018,	4118964.5436,	4118964.54,	4118964.54,	4118964.54,	4118964.54,	4116419.4022,	4116419.4022,	4116419.4022,	4116419.4022,	4116419.4,	4116419.4,	4116419.4,	4116419.4,	4116419.4,	4116419.4,	4116419.4,	4116419.4,	4116419.4,	4116419.4,	4116419.4,	4116419.4,	4116419.4,	4116419.3,	4116419.3,	4116419.3,	4116419.3,	4116419.3,	3988649.987,	3988649.987,	3988649.987,	3988649.987,	3988649.987,	3988649.987,	3988649.987,	3988649.987,	3988625.109,	3988625,	3988625,	3988625,	3988625,	3988625,	3970738.647,	3970738.638,	3970738,	3970738,	3970738,	3970738,	3970738,	3970738,	3970738,	3774991.528,	3774991.527,	3774991,	3774991,	3774294.816,	3774294,	3774294,	3774294,	3774294,	3774294,	3774294,	3650193.814,	3650193,	3650193,	3650193,	3650193,	3650193,	3650193,	3650193,	3650193,	3650193,	3650193,	3650193,	3650193,	3650193,	3650193,	3650193,	3650193]
LB_without = [2540779.67,	2571067.44,	2590283.03,	2591150.56,	2596323.22,	2596641.39,	2600673.18,	2604604.08,	2606249.85,	2606311.96,	2610750.23,	2610803.3,	2611503.12,	2611513.15,	2611654.89,	2611752,	2611999.65,	2611999.65,	2613179.83,	2613179.83,	2613414.54,	2613703.25,	2613707.55,	2613707.87,	2613707.87,	2613707.87,	2613707.87,	2613707.87,	2646061.74,	2651026.79,	2651026.79,	2651026.79,	2651026.79,	2651026.79,	2654014.93,	2654014.93,	2654014.93,	2654014.93,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26,	2654017.26]
plt.plot(time_without, UB_without, 'blue', label='UB (feasible sol.)')
plt.plot(time_without, LB_without, 'k--', label='LB')
plt.xlabel('Time (s)')
plt.ylabel('Objective ($)')
plt.ylim(2*1e6, 7*1e6)
plt.grid(axis='y', alpha=0.75)
plt.legend()
plt.show()

# With starting solution
time_with = [0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	1,	1,	1,	1,	1,	1,	1,	1,	1,	2,	2,	2,	2,	2,	2,	2,	5,	6,	10,	15,	20,	25,	30,	35,	37,	40,	44,	45,	47,	50,	56,	60,	64,	65,	67,	70,	73,	75,	75,	79,	80,	80,	85,	91,	96,	100,	105,	111,	116,	120,	125,	130,	135,	140,	145,	149,	150,	152,	153,	155,	160,	165,	170,	175,	180,	186,	191,	195,	201,	205,	210,	216,	220,	225,	230,	236,	240,	246,	250,	256,	256,	260,	267,	271,	276,	278,	280,	285,	290,	295,	302,	305,	307,	310,	310,	313,	314,	316,	320,	325,	330,	335,	341,	345,	352,	357,	362,	365,	370,	375,	380,	386,	390,	395,	400,	405,	410,	415,	420,	425,	430,	435,	440,	445,	450,	455,	460,	465,	471,	476,	481,	485,	490,	495,	500,	506,	510,	516,	520,	525,	532,	536,	541,	546,	550,	556,	560,	565,	570,	577,	580,	586,	592,	595,	600]
UB_with = [4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4580694.06,	4579607.0201,	4579607.02,	4579607.02,	4579607.02,	4579607.02,	4579607.02,	4579607.02,	4574455.7859,	4574455.79,	4573584.1422,	4573584.14,	4571468.5022,	4571468.5,	4571468.5,	4571468.5,	4010803.0891,	3586154.0786,	3586135.8119,	3586135.81,	3586126.6786,	3586126.68,	3383164.2488,	3118394.161,	3118394.16,	3029819.8424,	3029819.84,	3029819.84,	3029819.84,	3029819.84,	3029819.84,	3029819.84,	3029819.84,	3029819.84,	3029819.84,	3029819.84,	3029819.84,	3029819.84,	3029819.84,	3020231.3147,	3024231.31,	3024231.31,	3024231.31,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023181.65,	3023174.8031,	3023174.8031,	3023174.8,	3023174.8,	3023174.8,	3023174.6652,	3023174.67,	3023174.67,	3023174.67,	3023174.67,	3023174.67,	3023174.67,	3016174.2505,	3016174.25,	2829584.1591,	2823431.8096,	2823429.5263,	2821948.7392,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.74,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7,	2821948.7]
LB_with = [2540779.67,	2571067.44,	2590283.03,	2591143.79,	2596321.91,	2596637.72,	2600674.61,	2604605.73,	2607244.91,	2607416.89,	2611313.31,	2611348.81,	2611926.06,	2611926.06,	2612021.18,	2612074.71,	2612362.96,	2612366.64,	2612374.04,	2613550.59,	2613560.2,	2614193.81,	2614193.81,	2614193.81,	2614193.81,	2614193.81,	2651103.59,	2651103.59,	2651103.59,	2651103.59,	2651103.59,	2651103.59,	2654023.74,	2654023.74,	2654023.74,	2654023.74,	2654023.74,	2654023.74,	2654023.74,	2654023.74,	2654024.48,	2654024.48,	2654025.4,	2654025.4,	2654025.4,	2654025.4,	2654025.4,	2654025.4,	2654025.4,	2654026.02,	2654026.02,	2654026.02,	2654026.02,	2654027.82,	2654028.92,	2654029.04,	2654029.04,	2654029.04,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654029.66,	2654031.21,	2654031.21,	2654032.87,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49,	2654033.49]
plt.plot(time_with, UB_with, 'green', label='UB (feasible sol.)')
plt.plot(time_with, LB_with, 'k--', label='LB')
plt.xlabel('Time (s)')
plt.ylabel('Objective ($)')
plt.ylim(2*1e6, 7*1e6)
plt.grid(axis='y', alpha=0.75)
plt.legend()
plt.show()

